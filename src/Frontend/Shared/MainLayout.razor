@using System.Reflection
@using System.Runtime.InteropServices
@inherits LayoutComponentBase

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudSpacer/>
        <MudText Align="Align.Center" Typo="Typo.h6">Github Repository Analysis</MudText>
        <MudSpacer/>
        <MudButton Variant="Variant.Filled" FullWidth="false" Color="Color.Primary" OnClick="OnButtonClicked">About</MudButton>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/balanikas/github-repository-analysis/" aria-label="github project home" Target="_blank"/>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-8">
            @Body
            <MudMessageBox @ref="AboutBox" Title="About" CancelText="">
                <MessageContent>

                    <MudText>
                        Service summary - Given public data about a github repository, do a (mostly) tech stack agnostic
                        quality check of the repository, and provide help and guidance by utilizing the power of the internet (aka Open AI GPT-3 text completion).
                        <br/>
                        <br/>
                        This service is primarily targeted to small or medium sized repos,
                        that are owned by a single person or a small group of contributors.
                        It can be very useful to those getting started with open source projects, but also
                        for more experienced developers who want to do a quality check of their own repos.

                        The analysis is presented as a set of detections, where each detection is either
                        <MudPaper Class="d-flex align-content-start flex-wrap flex-grow-1 gap-2" Elevation="0">
                            <MudChip Size="Size.Small" Color="Color.Default" Label="true">Okay</MudChip>
                            <MudText Typo="Typo.body1">- looks good and no action needed</MudText>
                        </MudPaper>
                        <MudPaper Class="d-flex align-content-start flex-wrap flex-grow-1 gap-2" Elevation="0">
                            <MudChip Size="Size.Small" Label="true" Color="Color.Info">Can be improved</MudChip>
                            <MudText Typo="Typo.body1">- an action can be taken to improve the repo</MudText>
                        </MudPaper>
                        <MudPaper Class="d-flex align-content-start flex-wrap flex-grow-1 gap-2" Elevation="0">
                            <MudChip Size="Size.Small" Label="true" Color="Color.Warning">Warning</MudChip>
                            <MudText Typo="Typo.body1">- strongly recommended to address this</MudText>
                        </MudPaper>

                        This service currently has extra checks for csharp repositories, but any repository should work.
                        For feedback, please create a new
                        <MudLink Target="_blank" Href="https://github.com/balanikas/github-repository-analysis/issues">Issue</MudLink>


                    </MudText>
                    <br/>
                    <br/>
                    <MudText Typo="Typo.body2">
                        &copy; Copyright @DateTime.Now.Year,
                        <a href="https://github.com/balanikas/github-repository-analysis">Kristoffer Balanikas</a>.
                        Powered by MudBlazor
                        and @RuntimeInformation.FrameworkDescription
                        , build version @_appVersion
                    </MudText>
                </MessageContent>
                <YesButton>
                    <MudButton Variant="Variant.Filled">Ok</MudButton>
                </YesButton>
                <NoButton></NoButton>
            </MudMessageBox>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    MudMessageBox AboutBox { get; set; } = new();
    private string _appVersion = "";

    protected override void OnInitialized()
    {
        _appVersion = Assembly.GetEntryAssembly()
            ?.GetCustomAttribute<AssemblyInformationalVersionAttribute>()
            ?.InformationalVersion ?? string.Empty;
        base.OnInitialized();
    }

    private async void OnButtonClicked()
    {
        await AboutBox.Show();
        StateHasChanged();
    }

}