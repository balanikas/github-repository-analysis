using RepositoryAnalysis.Model;

namespace RepositoryAnalysis.Internal.Rules.Security;

internal class VulnerabilityAlertsRuleApplicator : IRuleApplicator
{
    public string RuleName => "vulnerability alerts";
    public RuleCategory Category => RuleCategory.Security;
    public Language Language => Language.None;

    public async Task<Rule> ApplyAsync(AnalysisContext context) => await Task.FromResult(Apply(context));

    private Rule Apply(AnalysisContext context)
    {
        var diagnostics = context.Repo.HasVulnerabilityAlertsEnabled
            ? context.Repo.VulnerabilityAlerts is null
                ? new RuleDiagnostics(Diagnosis.Info, "vulnerability alerts are enabled")
                : new RuleDiagnostics(Diagnosis.Info, $"vulnerability alerts are enabled, found {context.Repo.VulnerabilityAlerts.TotalCount} alerts")
            : new RuleDiagnostics(Diagnosis.Warning, "vulnerability alerts are disabled");

        return Rule.Create(this, diagnostics, new Explanation
        {
            Text = @"
If your code depends on a package with a security vulnerability, 
this can cause a range of problems for your project or the people who use it. 
You should upgrade to a secure version of the package as soon as possible. 
If your code uses malware, you need to replace the package with a secure alternative.
",
            AboutLink = new Link("about vulnerability alerts", "https://docs.github.com/en/code-security/dependabot/dependabot-alerts/about-dependabot-alerts"),
            GuidanceLink = new Link("how to configure alerts",
                "https://docs.github.com/en/code-security/dependabot/dependabot-alerts/configuring-dependabot-alerts")
        });
    }
}